import{r as p,e as u}from"./iframe-ThtCju29.js";const gt=500,wt=500;function bt(e){return e==="default"?{width:gt,height:wt,maxWidth:"100%"}:e==="fit"?{maxWidth:"100%"}:{width:e.width,height:e.width}}const Dt={boxShadow:"#000000 0px 1px 3px 0px",borderRadius:4,display:"flex",flexDirection:"column",position:"relative",fontFamily:"sans-serif"},kt=p.forwardRef(function({children:n,layout:t,style:a},r){const l=bt(t);let o={...Dt,...l};return a!==void 0&&(o={...o,...a}),u.createElement("div",{style:o,ref:r},n)}),Tn={color:null,message:null,position:"top"},En=p.createContext([Tn,()=>{}]);function Sn({children:e}){const[n,t]=p.useState(Tn),a=r=>{t(r)};return u.createElement(En.Provider,{value:[n,a]},e)}Sn.__docgenInfo={description:"",methods:[],displayName:"AlertMessageProvider"};function xn(){const[e,n]=p.useContext(En);return[e,n]}const fr="react-draw-square-tool",qt="react-draw-circle-tool",Vr="react-draw-diamond-tool",Gr="react-draw-line-tool",Lr="react-draw-arrow-tool",Mt="react-draw-erase-tool",w="react-draw-cursor",Rr="react-draw-textarea-tool",Pn="bottomBarContainer",Hn="toolIconWrapper",jn="clearAllButton",Cn="alertMessageDialog",fn="bottomToolButton",Vn="menuButton",Gn="menuContainer",Ln="topBarBontainer",Tt="originalBounds",Ar="orientation",N=450,Et=75,H={primary:{light:"#bddefb",main:"#228be6"},grey:{light:"#ececec"}};function St(e){let n="";const t=Object.entries(e);for(const[a,r]of t)n+=ue(a,r);return n}function ue(e,n){const t=e.startsWith(".")?e:`.${e}`;let a="",r=`${t} {`;const l=Object.entries(n);for(const[o,i]of l)if(typeof i=="string"||typeof i=="number")r+=" "+jt(o,i);else if(typeof i=="object"&&o.startsWith("@media"))a+=Pt(o,t,i);else if(typeof i=="object"&&o.startsWith("@keyframes"))a+=xt(o,i);else if(typeof i=="object"&&o.trim().startsWith("*"))a+=ue(t+" "+o.replace(/&/g,t),i);else if(typeof i=="object")a+=ue(o.replace(/&/g,t),i);else throw console.error("Unrecognized value:",i),new Error;return a+=`${r} }`,a}function xt(e,n){return`${e} { ${Object.entries(n).map(([t,a])=>ue(t,a).replace(".","")).join("")} }`}function Pt(e,n,t){let a=`${e} { `;return a+=ue(n,t),a+" }"}const Ht=new Set(["opacity","zIndex","fontWeight","lineHeight","flex"]);function jt(e,n){return typeof n=="string"||Ht.has(e)?`${Ye(e)}: ${n};`:`${Ye(e)}: ${n}px;`}function Ye(e){return e.replace(/([a-z])([A-Z])/g,n=>n[0]+"-"+n[1].toLowerCase())}const W={applyAbove:e=>`@media only screen and (min-width: ${e}px)`,applyBelow:e=>`@media only screen and (max-width: ${e}px)`,between:(e,n)=>`@media only screen and (min-width: ${e}px) and (max-width: ${n}px)`},Ct={display:"flex",cursor:"pointer",justifyContent:"center",alignItems:"center",border:"none",backgroundColor:"transparent",borderRadius:2,transition:"background-color 150ms ease-in-out",[W.applyAbove(N)]:{width:40,height:40},[W.applyBelow(N)]:{width:30,height:30},"&:hover":{backgroundColor:H.grey.light},'&[data-selected="true"]':{backgroundColor:`${H.primary.main} !important`},'&[data-selected="true"] > svg path':{fill:"white"}},ft={key:Hn,styles:Ct},Vt={width:180,fontSize:16,display:"flex",justifyContent:"flex-start",alignItems:"center",borderRadius:5,cursor:"pointer",border:"none",padding:"7px 10px",backgroundColor:H.primary.light,"&:hover":{backgroundColor:H.primary.main}},Gt={key:jn,styles:Vt},Lt={position:"absolute",whiteSpace:"nowrap",textAlign:"center",borderRadius:6,padding:"5px 10px",zIndex:1001,color:"white"},Rt={key:Cn,styles:Lt},At={display:"flex",backgroundColor:H.primary.light,zIndex:1e3,width:"100%",overflowX:"auto","*":{scrollbarWidth:"none",scrollbarColor:`${H.primary.main} #e2ecf5`},"&::-webkit-scrollbar":{height:10},"&::-webkit-scrollbar-track":{background:"#e2ecf5"},"&::-webkit-scrollbar-thumb":{backgroundColor:"#035195",borderRadius:10,border:"3px none #ffffff"},"&::-webkit-scrollbar-thumb:hover":{backgroundColor:" #00294d"}},It={key:Pn,styles:At},ht={display:"flex",cursor:"pointer",justifyContent:"center",alignItems:"center",border:"none",backgroundColor:"transparent",borderRadius:2,transition:"background-color 150ms ease-in-out",[W.applyAbove(N)]:{width:40,height:40},[W.applyBelow(N)]:{width:30,height:30},'&[data-mode="hide"]':{display:"none"},'&[data-disabled="true"]':{cursor:"not-allowed",backgroundColor:"white"},'&[data-disabled="true"] > svg path':{fill:"lightgrey",stroke:"lightgrey"},'&[data-disabled="false"]:hover':{backgroundColor:H.grey.light},'&[data-disabled="false"]':{display:"inline-block"}},Ot={key:fn,styles:ht},zt={position:"relative",display:"flex",cursor:"pointer",justifyContent:"center",alignItems:"center",border:"none",backgroundColor:"transparent",borderRadius:2,transition:"background-color 150ms ease-in-out",[W.applyAbove(N)]:{width:40,height:40},[W.applyBelow(N)]:{width:30,height:30},"&:hover":{backgroundColor:H.grey.light},'&[data-open="true"]':{backgroundColor:`${H.primary.main} !important`},'&[data-open="true"] > svg path':{fill:"white",stroke:"white"}},Kt={key:Vn,styles:zt},Ut={position:"absolute",left:0,padding:15,border:`1px solid ${H.primary.main}`,zIndex:1e3,backgroundColor:"white",borderRadius:"0px 5px 0px 0px",maxHeight:"calc(100% - 80px)",maxWidth:"100%",overflow:"auto",boxSizing:"border-box",[W.applyAbove(N)]:{bottom:40},[W.applyBelow(N)]:{bottom:30},"*":{scrollbarWidth:"none",scrollbarColor:`${H.primary.main} #e2ecf5`},"&::-webkit-scrollbar":{width:8},"&::-webkit-scrollbar-track":{background:"#e2ecf5"},"&::-webkit-scrollbar-thumb":{backgroundColor:H.primary.main,borderRadius:8,border:"3px none #ffffff"}},Bt={key:Gn,styles:Ut},_t={display:"flex",backgroundColor:H.primary.light,zIndex:1e3,width:"100%",overflowX:"auto","*":{scrollbarWidth:"none",scrollbarColor:`${H.primary.main} #e2ecf5`},"&::-webkit-scrollbar":{height:10},"&::-webkit-scrollbar-track":{background:"#e2ecf5"},"&::-webkit-scrollbar-thumb":{backgroundColor:"#035195",borderRadius:10,border:"3px none #ffffff"},"&::-webkit-scrollbar-thumb:hover":{backgroundColor:"#00294d"}},Nt={key:Ln,styles:_t},Wt=Object.freeze(Object.defineProperty({__proto__:null,alertMessageStles:Rt,bottomBarContainerStyles:It,bottomToolButtonStyles:Ot,clearAllButtonStyles:Gt,menuButtonStyles:Kt,menuContainerStyles:Bt,toolIconWrapperStyles:ft,topBarContainerStyles:Nt},Symbol.toStringTag,{value:"Module"})),Rn=p.createContext(()=>"");function Je(e){const n=new Map;if(!e)return n;for(const t in e){const a=e[t];a!==void 0&&n.set(t,a)}return n}function An(e,n){for(const t in n){const a=n[t];typeof a!==void 0&&(typeof a=="string"||typeof a=="number"||typeof a=="object"&&e[t]===void 0?e[t]=a:typeof a=="object"&&An(e[t],a))}}function Ze(e,n,t){if(!n)return e;for(const a in n){if(a===void 0)continue;const r=n[a];r!==void 0&&(e[a]===void 0?(e[a]=r,t.set(a,a)):An(e[a],r))}return e}function Qe(e){return Object.values(Wt).reduce((n,t)=>{if(n[t.key])throw new Error("duplicate key while creating css styles");n[t.key]=t.styles;const a=e.get(t.key);return a!==void 0&&e.set(t.key,a+" "+t.key),e.set(t.key,t.key),n},{})}function In({children:e,styles:n,classNames:t}){const a=p.useRef(Je(t)),r=p.useRef(Ze(Qe(a.current),n,a.current)),l=p.useRef(null);p.useEffect(()=>{const i=l.current;i&&(a.current=Je(t),r.current=Ze(Qe(a.current),n,a.current),i.innerHTML=St(r.current))},[n]);const o=i=>{const m=a.current.get(i);if(m===void 0)throw new Error("Could not find key in classNames map");return m};return u.createElement(Rn.Provider,{value:o},u.createElement("style",{id:"react-draw-styles",ref:l}),e)}In.__docgenInfo={description:"",methods:[],displayName:"StylesProvider",props:{styles:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  [BOTTOM_BAR_CONTAINER_CLASSES]?: StylesValue;
  [TOOL_ICON_WRAPPER_CLASSES]?: StylesValue;
  [CLEAR_ALL_BUTTON_CLASSES]?: StylesValue;
  [ALERT_MESSAGE_DIALOG_CLASSES]?: StylesValue;
  [BOTTOM_TOOL_BUTTON_CLASSES]?: StylesValue;
  [MENU_BUTTON_CLASSES]?: StylesValue;
  [MENU_CONTAINER_CLASSES]?: StylesValue;
  [MENU_BUTTON_CLASSES]?: StylesValue;
  [other: string]: StylesValue | undefined;
}`,signature:{properties:[{key:"bottomBarContainer",value:{name:"union",raw:`| CSSProperties
| {
    [selector: string]: CSSProperties;
  }
| KeyFramesDefinition`,elements:[{name:"CSSProperties"},{name:"signature",type:"object",raw:`{
  [selector: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]}},{name:"signature",type:"object",raw:`{
  [keyframesDef: string]: KeyFramesValue;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
  [percent: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]},required:!0}}]}}],required:!1}},{key:"toolIconWrapper",value:{name:"union",raw:`| CSSProperties
| {
    [selector: string]: CSSProperties;
  }
| KeyFramesDefinition`,elements:[{name:"CSSProperties"},{name:"signature",type:"object",raw:`{
  [selector: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]}},{name:"signature",type:"object",raw:`{
  [keyframesDef: string]: KeyFramesValue;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
  [percent: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]},required:!0}}]}}],required:!1}},{key:"clearAllButton",value:{name:"union",raw:`| CSSProperties
| {
    [selector: string]: CSSProperties;
  }
| KeyFramesDefinition`,elements:[{name:"CSSProperties"},{name:"signature",type:"object",raw:`{
  [selector: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]}},{name:"signature",type:"object",raw:`{
  [keyframesDef: string]: KeyFramesValue;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
  [percent: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]},required:!0}}]}}],required:!1}},{key:"alertMessageDialog",value:{name:"union",raw:`| CSSProperties
| {
    [selector: string]: CSSProperties;
  }
| KeyFramesDefinition`,elements:[{name:"CSSProperties"},{name:"signature",type:"object",raw:`{
  [selector: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]}},{name:"signature",type:"object",raw:`{
  [keyframesDef: string]: KeyFramesValue;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
  [percent: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]},required:!0}}]}}],required:!1}},{key:"bottomToolButton",value:{name:"union",raw:`| CSSProperties
| {
    [selector: string]: CSSProperties;
  }
| KeyFramesDefinition`,elements:[{name:"CSSProperties"},{name:"signature",type:"object",raw:`{
  [selector: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]}},{name:"signature",type:"object",raw:`{
  [keyframesDef: string]: KeyFramesValue;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
  [percent: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]},required:!0}}]}}],required:!1}},{key:"menuButton",value:{name:"union",raw:`| CSSProperties
| {
    [selector: string]: CSSProperties;
  }
| KeyFramesDefinition`,elements:[{name:"CSSProperties"},{name:"signature",type:"object",raw:`{
  [selector: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]}},{name:"signature",type:"object",raw:`{
  [keyframesDef: string]: KeyFramesValue;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
  [percent: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]},required:!0}}]}}],required:!1}},{key:"menuContainer",value:{name:"union",raw:`| CSSProperties
| {
    [selector: string]: CSSProperties;
  }
| KeyFramesDefinition`,elements:[{name:"CSSProperties"},{name:"signature",type:"object",raw:`{
  [selector: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]}},{name:"signature",type:"object",raw:`{
  [keyframesDef: string]: KeyFramesValue;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
  [percent: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]},required:!0}}]}}],required:!1}},{key:"menuButton",value:{name:"union",raw:`| CSSProperties
| {
    [selector: string]: CSSProperties;
  }
| KeyFramesDefinition`,elements:[{name:"CSSProperties"},{name:"signature",type:"object",raw:`{
  [selector: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]}},{name:"signature",type:"object",raw:`{
  [keyframesDef: string]: KeyFramesValue;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
  [percent: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]},required:!0}}]}}],required:!1}},{key:{name:"string"},value:{name:"union",raw:"StylesValue | undefined",elements:[{name:"union",raw:`| CSSProperties
| {
    [selector: string]: CSSProperties;
  }
| KeyFramesDefinition`,elements:[{name:"CSSProperties"},{name:"signature",type:"object",raw:`{
  [selector: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]}},{name:"signature",type:"object",raw:`{
  [keyframesDef: string]: KeyFramesValue;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
  [percent: string]: CSSProperties;
}`,signature:{properties:[{key:{name:"string"},value:{name:"CSSProperties",required:!0}}]},required:!0}}]}}],required:!1},{name:"undefined"}],required:!0}}]}},description:""},classNames:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  [BOTTOM_BAR_CONTAINER_CLASSES]?: string;
  [TOP_BAR_CONTAINER_CLASSES]?: string;
  [TOOL_ICON_WRAPPER_CLASSES]?: string;
  [CLEAR_ALL_BUTTON_CLASSES]?: string;
  [ALERT_MESSAGE_DIALOG_CLASSES]?: string;
  [BOTTOM_TOOL_BUTTON_CLASSES]?: string;
  [MENU_BUTTON_CLASSES]?: string;
  [MENU_CONTAINER_CLASSES]?: string;
  [MENU_BUTTON_CLASSES]?: string;
  [other: string]: string | undefined;
}`,signature:{properties:[{key:"bottomBarContainer",value:{name:"string",required:!1}},{key:"topBarBontainer",value:{name:"string",required:!1}},{key:"toolIconWrapper",value:{name:"string",required:!1}},{key:"clearAllButton",value:{name:"string",required:!1}},{key:"alertMessageDialog",value:{name:"string",required:!1}},{key:"bottomToolButton",value:{name:"string",required:!1}},{key:"menuButton",value:{name:"string",required:!1}},{key:"menuContainer",value:{name:"string",required:!1}},{key:"menuButton",value:{name:"string",required:!1}},{key:{name:"string"},value:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}],required:!0}}]}},description:""}}};function _(e){return p.useContext(Rn)(e)}function hn(){const[e]=xn(),n=_(Cn);return u.createElement("dialog",{className:n,style:{backgroundColor:e.color||"black",[e.position]:10},open:e.message!==null},e.message)}hn.__docgenInfo={description:"",methods:[],displayName:"AlertMessage"};function On({children:e,selected:n,onSelect:t}){const a=_(Hn);return u.createElement("button",{"data-selected":n,className:a,onClick:t},e)}On.__docgenInfo={description:"",methods:[],displayName:"ToolIconWrapper"};function ie({children:e,text:n,position:t,disabled:a}){const[r,l]=xn();if(!e)return u.createElement(u.Fragment,null);if(!n)return u.createElement(u.Fragment,null,e);const o=()=>{!a&&!Xt()&&l({...r,message:n,position:t})},i=()=>{r.message!==null&&l({...r,message:null})};return u.createElement("span",{onMouseOver:o,onMouseLeave:i,"aria-label":`label mouse listener ${n}`},e)}function Xt(){return"ontouchstart"in window||navigator.maxTouchPoints>0}ie.__docgenInfo={description:"",methods:[],displayName:"ToolTip",props:{children:{required:!0,tsType:{name:"ReactReactElement",raw:"React.ReactElement<any, string | React.JSXElementConstructor<any>>",elements:[{name:"any"},{name:"union",raw:"string | React.JSXElementConstructor<any>",elements:[{name:"string"},{name:"ReactJSXElementConstructor",raw:"React.JSXElementConstructor<any>",elements:[{name:"any"}]}]}]},description:""},text:{required:!1,tsType:{name:"string"},description:""},position:{required:!0,tsType:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}]},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""}}};function zn(e){return e.onDrawStart!==void 0}function Kn(e){return e.getDisplayMode!==void 0}function Un({tools:e,onSelectDrawingTool:n,onClickActionTool:t,currentTool:a}){const r=_(Ln);return u.createElement("div",{className:r},e.filter(l=>!!l.icon).map((l,o)=>{const i=l.tooltip;return u.createElement(ie,{text:i,position:"top",key:l.id},u.createElement(On,{selected:l.id===a,onSelect:()=>{if(zn(l))return n(l);if(Kn(l))return t(l.handleContext)}},l.icon))}))}Un.__docgenInfo={description:"",methods:[],displayName:"TopToolBar",props:{tools:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  icon?: JSX.Element;
  id: string;
  tooltip?: string;
}`,signature:{properties:[{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}}]}}],raw:"TopBarTool[]"},description:""},onSelectDrawingTool:{required:!0,tsType:{name:"signature",type:"function",raw:"(drawingTool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"drawingTool"}],return:{name:"void"}}},description:""},onClickActionTool:{required:!0,tsType:{name:"signature",type:"function",raw:"(fn: (ctx: ReactDrawContext) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}}},name:"fn"}],return:{name:"void"}}},description:""},currentTool:{required:!0,tsType:{name:"string"},description:""}}};function ne(e){for(var n="",t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",a=t.length,r=0;r<e;r++)n+=t.charAt(Math.floor(Math.random()*a));return n}function Le(){return typeof window!==void 0}function Bn(e,n,t){if(!Le())throw new Error("new bounding div called on the server.");const a=parseInt(n.lineWidth),r=parseInt(n.zIndex??"0"),[l,o]=e,{id:i,div:m}=$t(l,o,a,t,r);return{coords:[e],element:null,toolId:t,containerDiv:m,id:i,style:{...n},customData:new Map}}function $t(e,n,t,a,r){const l=ne(6),o=document.createElement("div"),i=e-t,m=n-t;return o.id=`${a}-${l}`,o.style.width=`${t*2}px`,o.style.height=`${t*2}px`,o.style.position="absolute",o.style.left=i+"px",o.style.top=m+"px",o.style.pointerEvents="none",o.style.zIndex=r.toString(),o.style.boxSizing="border-box",{div:o,id:l,top:m,left:i,right:i+t+t,bottom:m+t+t}}function Ft(e,n){const{width:t,height:a}=Yt(e),r=n.right-n.left,l=n.bottom-n.top,o=r/t,i=l/a,m=e.lastElementChild;m.style.transform=`scale(${o}, ${i})`}function Yt(e){const n=e.getAttribute("viewbox");if(!n)throw new Error("no viewbox found on ele");const t=n.split(" ");return{width:parseFloat(t[2]),height:parseFloat(t[3])}}function Jt(e,n,t){const a=n.getBoundingClientRect(),r=t.getBoundingClientRect(),l=a.top-r.top,o=e[1]-l,i=a.left-r.left;return[e[0]-i,o]}function Zt(e){let n=!1;const[t,a]=e.coords[e.coords.length-1],r=e.containerDiv,l=j(e),o=parseInt(e.style.lineWidth);if(t-o<=l.left){const i=t-o,m=l.left-i;r.style.left=i+"px",r.style.width=l.width+m+"px",n=!0}else t+o>=l.right&&(r.style.width=t+o*2-l.left+"px",n=!0);if(a+o>=l.bottom)r.style.height=a+o*2-l.top+"px",n=!0;else if(a-o<=l.top){const i=a-o,m=l.top-i;r.style.top=i+"px",r.style.height=l.height+m+"px",n=!0}return n}function _n(e){if(e.coords.length<2)throw new Error("data coords must be at least length 2");const[n,t]=e.coords[0],[a,r]=e.coords[e.coords.length-1];parseInt(e.style.lineWidth);const l=Math.min(n,a),o=Math.min(t,r),i=Math.max(n,a),m=Math.max(t,r),d=e.containerDiv;return d.style.top=o+"px",d.style.left=l+"px",d.style.width=`${Math.max(i-l,1)}px`,d.style.height=`${Math.max(m-o,1)}px`,e.coords}function Qt(e,n){return e.top<=n.top&&e.bottom>=n.bottom&&e.left<=n.left&&e.right>=n.right}function ea(e,n){const[t,a]=n,{width:r,height:l}=e;return r/2>=t&&-r/2<=t&&l/2>=a&&-l/2<=a}function je(e,n){return Math.sqrt(Math.pow(Math.abs(e[0]-n[0]),2)+Math.pow(Math.abs(e[1]-n[1]),2))}function Ir(e){const[n,t]=e;return{top:t,right:n,bottom:t,left:n}}function j(e){const n=e.containerDiv,t=n.getBoundingClientRect(),a=Q(n.style.left),r=Q(n.style.top),l=Q(n.style.height),o=Q(n.style.width),i=l===0?t.height:l,m=o===0?t.width:o;return{left:a,top:r,height:i,width:m,right:a+m,bottom:r+i}}const na=/-?\d+\.*\d*/;function Q(e){const n=e.match(na);return n?parseFloat(n[0]):0}function ke(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function"){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)n.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(t[a[r]]=e[a[r]])}return t}function te(e){const{size:n,width:t,height:a,color:r}=e,l=ke(e,["size","width","height","color"]);return Object.assign({width:t||n||20,height:a||n||20,color:r||"#111827"},l)}function ta(e){const n=te(e);return u.createElement("svg",Object.assign({},n,{viewBox:"0 0 14 14",fill:"none",xmlns:"http://www.w3.org/2000/svg"}),u.createElement("path",{d:"M10.5858 0.585786C11.3668 -0.195262 12.6332 -0.195262 13.4142 0.585786C14.1953 1.36683 14.1953 2.63316 13.4142 3.41421L12.6213 4.20711L9.79289 1.37868L10.5858 0.585786Z",fill:n.color}),u.createElement("path",{d:"M8.37868 2.79289L0 11.1716V14H2.82842L11.2071 5.62132L8.37868 2.79289Z",fill:n.color}))}function aa(e){const n=te(e);return u.createElement("svg",Object.assign({},n,{viewBox:"0 0 17 17",fill:"none",xmlns:"http://www.w3.org/2000/svg"}),u.createElement("path",{d:"M5.67175 0.911473C5.52881 0.378007 4.98047 0.0614245 4.44701 0.204366C3.91354 0.347308 3.59696 0.895645 3.7399 1.42911L3.99872 2.39504C4.14166 2.9285 4.69 3.24509 5.22346 3.10214C5.75693 2.9592 6.07351 2.41086 5.93057 1.8774L5.67175 0.911473Z",fill:n.color}),u.createElement("path",{d:"M1.42911 3.7399C0.895645 3.59696 0.347308 3.91354 0.204366 4.44701C0.0614245 4.98047 0.378007 5.52881 0.911473 5.67175L1.8774 5.93057C2.41086 6.07351 2.9592 5.75693 3.10214 5.22346C3.24509 4.69 2.9285 4.14166 2.39504 3.99872L1.42911 3.7399Z",fill:n.color}),u.createElement("path",{d:"M10.2426 3.17149C10.6331 2.78097 10.6331 2.1478 10.2426 1.75728C9.85204 1.36676 9.21887 1.36676 8.82835 1.75728L8.12124 2.46439C7.73072 2.85491 7.73072 3.48808 8.12124 3.8786C8.51177 4.26912 9.14493 4.26912 9.53545 3.8786L10.2426 3.17149Z",fill:n.color}),u.createElement("path",{d:"M3.17149 10.2426L3.8786 9.53546C4.26912 9.14493 4.26912 8.51177 3.8786 8.12124C3.48808 7.73072 2.85491 7.73072 2.46439 8.12124L1.75728 8.82835C1.36676 9.21887 1.36676 9.85204 1.75728 10.2426C2.1478 10.6331 2.78097 10.6331 3.17149 10.2426Z",fill:n.color}),u.createElement("path",{d:"M6.37142 5.07152C6 4.92295 5.57578 5.01002 5.29292 5.29289C5.01006 5.57575 4.92298 5.99997 5.07155 6.37138L9.07155 16.3714C9.2178 16.737 9.56502 16.9828 9.95847 16.9991C10.3519 17.0155 10.7183 16.7994 10.8945 16.4472L12.274 13.6882L15.2929 16.7071C15.6834 17.0976 16.3166 17.0976 16.7071 16.7071C17.0977 16.3166 17.0977 15.6834 16.7071 15.2929L13.6882 12.2739L16.4472 10.8944C16.7995 10.7183 17.0155 10.3519 16.9992 9.95843C16.9828 9.56498 16.737 9.21777 16.3714 9.07152L6.37142 5.07152Z",fill:n.color}))}function ra(e){const n=te(e);return u.createElement("svg",Object.assign({},n,{viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg"}),u.createElement("circle",{cx:"8",cy:"8",r:"8",fill:n.color}))}function la(e){const n=te(e),{color:t}=n,a=ke(n,["color"]);return u.createElement("svg",Object.assign({},a,{viewBox:"0 0 20 20",fill:"none",xmlns:"http://www.w3.org/2000/svg"}),u.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M3 5C3 4.44772 3.44772 4 4 4H16C16.5523 4 17 4.44772 17 5C17 5.55228 16.5523 6 16 6H4C3.44772 6 3 5.55228 3 5Z",fill:t}),u.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M3 10C3 9.44772 3.44772 9 4 9H16C16.5523 9 17 9.44772 17 10C17 10.5523 16.5523 11 16 11H4C3.44772 11 3 10.5523 3 10Z",fill:t}),u.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M3 15C3 14.4477 3.44772 14 4 14H16C16.5523 14 17 14.4477 17 15C17 15.5523 16.5523 16 16 16H4C3.44772 16 3 15.5523 3 15Z",fill:t}))}function oa(e){const n=te(e),{color:t}=n,a=ke(n,["color"]);return u.createElement("svg",Object.assign({},a,{viewBox:"0 0 18 20",fill:"none",xmlns:"http://www.w3.org/2000/svg"}),u.createElement("path",{d:"M16 5L15.1327 17.1425C15.0579 18.1891 14.187 19 13.1378 19H4.86224C3.81296 19 2.94208 18.1891 2.86732 17.1425L2 5M7 9V15M11 9V15M12 5V2C12 1.44772 11.5523 1 11 1H7C6.44772 1 6 1.44772 6 2V5M1 5H17",stroke:t,strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"}))}function ia(e){const n=te(e),{color:t}=n,a=ke(n,["color"]);return u.createElement("svg",Object.assign({},a,{viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"}),u.createElement("path",{d:"M19.312 11.75C20.4373 11.75 21.312 10.8936 21.312 9.79167C21.312 8.68978 20.4373 7.83333 19.312 7.83333C18.1867 7.83333 17.312 8.68978 17.312 9.79167C17.312 10.8936 18.1867 11.75 19.312 11.75ZM15.312 6.54867C16.4373 6.54867 17.312 5.69222 17.312 4.59033C17.312 3.48844 16.4373 2.632 15.312 2.632C14.1867 2.632 13.312 3.48844 13.312 4.59033C13.312 5.69222 14.1867 6.54867 15.312 6.54867ZM8.688 6.54867C9.81333 6.54867 10.688 5.69222 10.688 4.59033C10.688 3.48844 9.81333 2.632 8.688 2.632C7.56267 2.632 6.688 3.48844 6.688 4.59033C6.688 5.69222 7.56267 6.54867 8.688 6.54867ZM4.688 11.75C5.81333 11.75 6.688 10.8936 6.688 9.79167C6.688 8.68978 5.81333 7.83333 4.688 7.83333C3.56267 7.83333 2.688 8.68978 2.688 9.79167C2.688 10.8936 3.56267 11.75 4.688 11.75ZM12 0C18.6253 0 24 4.71175 24 10.4653C24 14.0765 21 16.9526 17.312 16.9526H15C13.8747 16.9526 13 17.8091 13 18.911C13 19.4006 13.188 19.8288 13.5 20.1956C13.812 20.5625 14 21.0521 14 21.5417C14 22.6436 13.1253 23.5 12 23.5C5.37467 23.5 0 18.2373 0 11.75C0 5.26269 5.37467 0 12 0Z",fill:t}))}function Nn({getEditProps:e,styleComponents:n={},onUpdateStyle:t}){const[a,r]=p.useState(e()),l=Object.keys(a).filter(i=>!!n[i]);p.useEffect(()=>{function i(){const m=e();r(m)}return window.addEventListener("click",i),()=>{window.removeEventListener("click",i)}},[a]);const o=(i,m)=>{r({...a,[i]:m}),t(i,m)};return l.length===0?u.createElement(u.Fragment,null):(l.sort((i,m)=>{const d=n[i].order;return n[m].order-d}),u.createElement("div",{style:{display:"flex",flexDirection:"column",gap:10}},l.map(i=>{const m=n[i].component;return u.createElement(m,{key:i,onUpdate:o,styleKey:i,styleValue:a[i]})})))}Nn.__docgenInfo={description:"",methods:[],displayName:"StylesMenu",props:{getEditProps:{required:!0,tsType:{name:"signature",type:"function",raw:"() => StringObject",signature:{arguments:[],return:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]}}}},description:""},styleComponents:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: {
    order: number;
    component: StyleComponent;
  };
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"object",raw:`{
  order: number;
  component: StyleComponent;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!0}},{key:"component",value:{name:"signature",type:"function",raw:"(props: StyleComponentProps) => JSX.Element",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  onUpdate: (key: keyof ToolPropertiesMap, value: string) => void;
  styleKey: string;
  styleValue: string;
}`,signature:{properties:[{key:"onUpdate",value:{name:"signature",type:"function",raw:"(key: keyof ToolPropertiesMap, value: string) => void",signature:{arguments:[{type:{name:"ToolPropertiesMap"},name:"key"},{type:{name:"string"},name:"value"}],return:{name:"void"}},required:!0}},{key:"styleKey",value:{name:"string",required:!0}},{key:"styleValue",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"JSX.Element"}},required:!0}}]},required:!0}}]}},description:"",defaultValue:{value:"{}",computed:!1}},onUpdateStyle:{required:!0,tsType:{name:"signature",type:"function",raw:`(
  key: keyof ToolPropertiesMap,
  value: string,
) => (ActionObject | undefined)[]`,signature:{arguments:[{type:{name:"ToolPropertiesMap"},name:"key"},{type:{name:"string"},name:"value"}],return:{name:"Array",elements:[{name:"unknown"}],raw:"(ActionObject | undefined)[]"}}},description:""}}};function Wn({tools:e,displayMap:n,onSelectDrawingTool:t,onClickActionTool:a,stylesMenu:r,children:l}){const o=_(Pn),i=_(fn),m=_(Vn),d=_(Gn),[q,v]=p.useState(null),y=D=>v(D===q?null:D),g=!!r.styleComponents&&!ua(r.styleComponents),x=!!l&&u.Children.count(l)>0;return u.createElement(u.Fragment,null,q==="styles"&&u.createElement("div",{className:d},u.createElement(Nn,{...r})),q==="menu"&&u.createElement("div",{className:d},l),u.createElement("div",{className:o},x&&u.createElement(ie,{text:"Menu",position:"bottom"},u.createElement("button",{className:m,onClick:()=>y("menu"),"data-open":q==="menu"},u.createElement(la,{size:20}))),g&&u.createElement(ie,{text:"Styles",position:"bottom"},u.createElement("button",{className:m,onClick:()=>y("styles"),"data-open":q==="styles"},u.createElement(ia,{size:20}))),e.map((D,le)=>{const J=D.id,h=n.get(J)||"hide",O=h==="disabled";return u.createElement(ie,{key:D.id,text:D.tooltip,position:"bottom",disabled:O},u.createElement("button",{className:i,"aria-disabled":O,"data-disabled":O,"data-mode":h,disabled:O,onClick:()=>{if(zn(D))return t(D);if(Kn(D))return a(D.handleContext)}},D.icon))})))}function ua(e){for(var n in e)return!1;return!0}Wn.__docgenInfo={description:"",methods:[],displayName:"BottomToolBar",props:{tools:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}}]}}],raw:"BaseTool[]"},description:""},displayMap:{required:!0,tsType:{name:"Map",elements:[{name:"string"},{name:"union",raw:'"disabled" | "hide" | "show"',elements:[{name:"literal",value:'"disabled"'},{name:"literal",value:'"hide"'},{name:"literal",value:'"show"'}]}],raw:"Map<string, DisplayMode>"},description:""},onSelectDrawingTool:{required:!0,tsType:{name:"signature",type:"function",raw:"(drawingTool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"drawingTool"}],return:{name:"void"}}},description:""},onClickActionTool:{required:!0,tsType:{name:"signature",type:"function",raw:"(fn: (ctx: ReactDrawContext) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}}},name:"fn"}],return:{name:"void"}}},description:""},stylesMenu:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  getEditProps: () => StringObject;
  styleComponents?: StyleComponents;
  onUpdateStyle: UpdateStyleFn;
}`,signature:{properties:[{key:"getEditProps",value:{name:"signature",type:"function",raw:"() => StringObject",signature:{arguments:[],return:{name:"signature",type:"object",raw:"{ [key: string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]}}},required:!0}},{key:"styleComponents",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: {
    order: number;
    component: StyleComponent;
  };
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"object",raw:`{
  order: number;
  component: StyleComponent;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!0}},{key:"component",value:{name:"signature",type:"function",raw:"(props: StyleComponentProps) => JSX.Element",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  onUpdate: (key: keyof ToolPropertiesMap, value: string) => void;
  styleKey: string;
  styleValue: string;
}`,signature:{properties:[{key:"onUpdate",value:{name:"signature",type:"function",raw:"(key: keyof ToolPropertiesMap, value: string) => void",signature:{arguments:[{type:{name:"ToolPropertiesMap"},name:"key"},{type:{name:"string"},name:"value"}],return:{name:"void"}},required:!0}},{key:"styleKey",value:{name:"string",required:!0}},{key:"styleValue",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"JSX.Element"}},required:!0}}]},required:!0}}]},required:!1}},{key:"onUpdateStyle",value:{name:"signature",type:"function",raw:`(
  key: keyof ToolPropertiesMap,
  value: string,
) => (ActionObject | undefined)[]`,signature:{arguments:[{type:{name:"ToolPropertiesMap"},name:"key"},{type:{name:"string"},name:"value"}],return:{name:"Array",elements:[{name:"unknown"}],raw:"(ActionObject | undefined)[]"}},required:!0}}]}},description:""},children:{required:!0,tsType:{name:"union",raw:"React.ReactNode | React.ReactElement | JSX.Element",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"ReactReactElement",raw:"React.ReactElement"},{name:"JSX.Element"}]},description:""}}};function qe(e,n){const t=e.id,a=e.containerDiv,r=n.fullState[w],l=r.handlers[t];if(l)for(const m of l)m.ele.removeEventListener(m.eventName,m.fn);const o=a.querySelector('[id^="select-frame"');r.handlers[t]=[],o!==null&&a.removeChild(o);const i=r.selectedIds.indexOf(t);i>=0&&r.selectedIds.splice(i,1)}function Y(e,n){n.shouldKeepHistory&&(n.undoStack.push(e),n.redoStack.splice(0))}function ae(e,n,t){return{objectId:e.id,toolId:e.toolId,toolType:"top-bar-tool",action:n,data:t}}function hr(e){const n=e.containerDiv;return n.style.backgroundColor=e.style.background,n.style.borderRadius="2px",n.style.boxSizing="border-box",n.style.color=e.style.color,n.style.opacity=e.style.opacity,n.style.fontSize=`${e.style.fontSize}px`,e}function Me(e){const n=e.element;if(!n)throw new Error;let t=n.querySelector("path");if(t||(t=n.querySelector("line")),!t)throw new Error;return t}const ma=/\d+\.*\d*/g;function Or(e){const t=Me(e).style.transform.match(ma);return t?{x:t[0],y:t[1]}:{x:"1",y:"1"}}function He(e){return e.style.zIndex===void 0?0:parseInt(e.style.zIndex)}function pe(e,n){for(const t in n)e.style[t]=n[t];return e}function re(e,n){const t=e.find(a=>a.id===n);if(!t)throw new Error("could not find the used tool");return t}function Re(e,n){const{objectsMap:t,viewContainer:a}=n,r=f(n.objectsMap,e);qe(r,n);const{containerDiv:l,id:o}=r;a.removeChild(l),t.delete(o);const i=re(n.drawingTools,r.toolId);i.onDeleteObject&&i.onDeleteObject(r,n)}function f(e,n){const t=e.get(n);if(!t)throw new Error("could not get object from map");return t}function S(e,n){if(!n)throw new Error("Container not set.");const t=n.getBoundingClientRect();return[e[0]-t.left,e[1]-t.top]}function U(e){let n=e.touches[0];return n||(n=e.targetTouches[0]),n||(n=e.changedTouches[0]),[n.clientX,n.clientY]}function Te(e){const{width:n,height:t,top:a,left:r}=e,l=a+t/2;return[r+n/2,l]}function zr(e){const t=e.viewContainer.getBoundingClientRect();return[t.width/2,t.height/2]}function sa(e,n){const t=n.querySelectorAll(e);t.length>0&&t.forEach(a=>{n.removeChild(a)})}function da(e){return e!==void 0}function ca(e,n){const t={action:"batch",toolType:"batch",toolId:"",objectId:"",data:[]},a=new Set;for(const r of e){const l=f(n.objectsMap,r),o=l.toolId,i=re(n.drawingTools,o);if(n.shouldKeepHistory&&i?.undoHandlers?.delete){const m={action:"delete",toolType:"top-bar-tool",toolId:o,objectId:r,data:l};t.data.push(m)}else a.add(o);Re(r,n)}if(n.shouldKeepHistory){if(Y(t,n),a.size>0)for(let r=n.undoStack.length-1;r>=0;r--)a.has(n.undoStack[r].toolId)&&(n.undoStack.splice(r,1),r++)}else n.undoStack.splice(0)}function Kr(e,n,t){const a={...e.globalStyles},l=Ae(e)+1;return a.zIndex=l.toString(),Bn(n,a,t)}function Ur(e,n){const{containerDiv:t,id:a}=n;e.viewContainer.appendChild(t);const l=Ae(e)+1;ya(n,l),e.objectsMap.set(a,n)}function va(e){return{toolId:"",toolType:"top-bar-tool",objectId:"",data:[],action:"delete"}}function Ae(e){if(e.objectsMap.size===0)return 0;const n=Array.from(e.objectsMap.values());return n.sort((t,a)=>He(a.containerDiv)-He(t.containerDiv)),He(n[0].containerDiv)}function ya(e,n){e.style.zIndex=n.toString(),e.containerDiv.style.zIndex=n.toString()}const pa=/-{0,1}\d+\.*\d*/g;function me(e){const n=e.style.transform;if(!n)return 0;const t=n.match(pa);return t?parseFloat(t[0]):0}function $(e,n){const t=Te(j(e)),a=me(e.containerDiv);if(a===0)return[n.newPoint[0]-n.previousPoint[0],n.newPoint[1]-n.previousPoint[1]];const[r,l]=ye(n.previousPoint,t),[o,i]=ye(n.newPoint,t),m=ge(r,l,-a),d=ge(o,i,-a);return ye(d,m)}function C(e,n,t){const[a,r]=n,[l,o]=t,i=j(e),m=e.containerDiv,d=me(m),[q,v]=Te(i),[y,g]=ge(a,r,d),x=i.height+o,D=i.width+l;if(D<10||x<10)return!1;const le=x/2,J=D/2,h=y-J,O=g+le,de=v-O,z=h+q;return m.style.top=de+"px",m.style.left=z+"px",m.style.width=D+"px",m.style.height=x+"px",!0}function ye(e,n){const[t,a]=n,[r,l]=e,o=a-l;return[r-t,o]}const en=5;function ge(e,n,t){const a=t*(Math.PI/180),r=e*Math.cos(a)+n*Math.sin(a),l=-e*Math.sin(a)+n*Math.cos(a);return[Ce(r,en),Ce(l,en)]}function Ce(e,n){const t=Math.pow(10,n);return Math.round(e*t)/t}function R([e,n],t,{direction:a,targetAspectRatio:r}){const l=ga(a),o=wa(a),i=ba(a),m=Da(a,e,n),d={dX:e,dY:n,currAR:r,dirFlag:m,reverseFlag:i};return console.log(r),[l(d),o(d)]}function ga(e){return n=>{const t=e[0],a=Math.abs(n.dX),r=Math.abs(n.dY),l=a/r;switch(t){case"E":case"W":return n.dY===0||l>n.currAR?n.dX:r*n.currAR*n.dirFlag*n.reverseFlag;default:return n.dX}}}function wa(e){return n=>{const t=Math.abs(n.dX),a=Math.abs(n.dY),r=e[0],l=t/a;switch(r){case"N":case"S":return n.dX===0||l<n.currAR?n.dY:t/n.currAR*n.dirFlag*n.reverseFlag;default:return n.dY}}}function ba(e){return e[1]==="S"||e[1]==="W"?-1:1}function Da(e,n,t){switch(e[0]){case"N":return n<0?1:-1;case"S":return n<0?-1:1;case"E":return t<0?1:-1;case"W":return t<0?-1:1}throw new Error("should not get here"+JSON.stringify({direction:e,dX:n,dY:t}))}function ka(e){const{width:n,height:t}=j(e);return n/t}function X(e,n,t){return{targetAspectRatio:ka(e),direction:t}}function qa(e,n,t){const a=$(e,n);if(t!==void 0){const[r,l]=R(a,e,t);return C(e,[0,-l/2],[0,-l])}return C(e,[0,-a[1]/2],[0,-a[1]])}function Ma(e,n,t){let a=$(e,n);if(t!==void 0){const[r,l]=R(a,e,t);return C(e,[r/2,0],[-r,0])}return C(e,[a[0]/2,0],[-a[0],0])}function Ta(e,n){const[t,a]=$(e,n);if(!n.shouldPreserveAspectRatio)return C(e,[t/2,-a/2],[-t,a]);const r=X(e,n,"WS"),[l,o]=R([t,a],e,r),i=X(e,n,"SW"),[m,d]=R([t,a],e,i);return C(e,[l/2,-d/2],[-l,d])}function Ea(e,n,t){let a=$(e,n);if(t!==void 0){const[r,l]=R(a,e,t);return C(e,[0,-l/2],[0,l])}return C(e,[0,-a[1]/2],[0,a[1]])}function Sa(e,n){const[t,a]=$(e,n);if(!n.shouldPreserveAspectRatio)return C(e,[t/2,-a/2],[t,a]);const r=X(e,n,"ES"),[l,o]=R([t,a],e,r),i=X(e,n,"SE"),[m,d]=R([t,a],e,i);return C(e,[l/2,-d/2],[l,d])}function xa(e,n){const[t,a]=$(e,n);if(!n.shouldPreserveAspectRatio)return C(e,[t/2,-a/2],[-t,-a]);const r=X(e,n,"WN"),[l,o]=R([t,a],e,r),i=X(e,n,"NW"),[m,d]=R([t,a],e,i);return C(e,[l/2,-d/2],[-l,-d])}function Pa(e,n){const[t,a]=$(e,n);if(!n.shouldPreserveAspectRatio)return C(e,[t/2,-a/2],[t,-a]);const r=X(e,n,"EN"),[l,o]=R([t,a],e,r),i=X(e,n,"NE"),[m,d]=R([t,a],e,i);return C(e,[l/2,-d/2],[l,-d])}function Ha(e,n,t){let a=$(e,n);if(t!==void 0){const[r,l]=R(a,e,t);return C(e,[r/2,0],[r,0])}return C(e,[a[0]/2,0],[a[0],0])}const ja="button-rotate",Ca="select-frame",fa="corner-button",Va={top:"-45px",cursor:"grab",left:"calc(50% - 8px)"},Ga={width:"calc(100% + 16px)",height:"calc(100% + 16px)",position:"absolute",border:`2px dotted ${H.primary.main}`,top:"-6px",left:"-6px",cursor:"all-scroll",pointerEvents:"all",boxSizing:"border-box"},La={width:"0px",height:"35px",borderLeft:"2px dotted black",position:"absolute",left:"5px",pointerEvents:"none"},Xn=16,$n=16,Ra={position:"absolute",borderRadius:"50%",width:`${Xn}px`,height:`${$n}px`};function I(e,n){return e.map(t=>{const a=n.get(t);if(!a)throw new Error("object not found in map");return a})}function Ee(e,n){const t=e.toolId,a=n.drawingTools.find(r=>r.id===t);!a||!a.onAfterUpdate||a.onAfterUpdate(e,n)}function Aa(e,n,t){const[a,r]=t,[l,o]=n,i=a-l,m=r-o;for(const d of e){const q=d.containerDiv,v=j(d),{left:y,top:g}=v;q.style.top=g+m+"px",q.style.left=y+i+"px"}}function nn(e,n){const t=e.fullState[w],a=t.prevPoint;if(!a){console.error("handleDrag prev point not set");return}const r=I(t.selectedIds,e.objectsMap);Aa(r,a,n),t.prevPoint=n,r.length===1&&Ee(r[0],e)}function tn(e,n){const t=e.fullState[w];t.prevPoint=n,Ia(e)}function an(e){const n=e.fullState[w];n.prevPoint=null}function Fn(e,n,t){const a=function(v){v.stopPropagation();const y=[v.clientX,v.clientY],g=S(y,t.viewContainer);tn(t,g),window.addEventListener("mousemove",r),window.addEventListener("mouseup",l)},r=function(v){v.stopPropagation();const y=[v.clientX,v.clientY],g=S(y,t.viewContainer);nn(t,g)},l=function(v){v.stopPropagation(),an(t),window.removeEventListener("mousemove",r),window.removeEventListener("mouseup",l)},o=function(v){v.stopPropagation();const y=U(v),g=S(y,t.viewContainer);tn(t,g),window.addEventListener("touchmove",i,{passive:!0}),window.addEventListener("touchend",m,{passive:!0}),window.addEventListener("touchcancel",m,{passive:!0})},i=function(v){v.stopPropagation();const y=U(v),g=S(y,t.viewContainer);nn(t,g)},m=function(v){v.stopPropagation(),an(t),window.removeEventListener("touchmove",i),window.removeEventListener("touchend",m),window.removeEventListener("touchcancel",m)},d=t.fullState[w],q=d.handlers[n]||[];d.handlers[n]=q,q.push({ele:e,eventName:"mousedown",fn:a}),q.push({ele:e,eventName:"touchstart",fn:o}),e.addEventListener("mousedown",a),e.addEventListener("touchstart",o,{passive:!0})}function Ia(e){const n=e.fullState[w],t=I(n.selectedIds,e.objectsMap),a={objectId:"",toolId:w,toolType:"top-bar-tool",action:"drag",data:t.map(r=>{const l=j(r);return{objectId:r.id,top:l.top,left:l.left}})};Y(a,e)}function rn(e,n,t){const a=e.fullState[w],r=a.prevPoint;if(!r)return;const l=I(a.selectedIds,e.objectsMap);if(l.length!==1){console.error("start rotating got incorrect number of objects to handle");return}const o=l[0],i=re(e.drawingTools,o.toolId),m={viewContainer:e.viewContainer,newPoint:n,previousPoint:r,shouldPreserveAspectRatio:e.shouldCornerResizePreserveRatio};i.doResize?i.doResize(o,m):t(o,m),i.onResize(o,m),a.prevPoint=n}function ln(e,n){e.fullState[w].prevPoint=n,ha(e)}function on(e){const n=e.fullState[w];n.prevPoint=null}function B(e,n,t,a){const r=function(y){y.stopPropagation();const g=[y.clientX,y.clientY],x=S(g,t.viewContainer);ln(t,x),window.addEventListener("mousemove",l),window.addEventListener("mouseup",o)},l=function(y){y.stopPropagation();const g=[y.clientX,y.clientY],x=S(g,t.viewContainer);rn(t,x,a)},o=function(y){y.stopPropagation(),on(t),window.removeEventListener("mousemove",l),window.removeEventListener("mouseup",o)},i=function(y){y.stopPropagation();const g=U(y),x=S(g,t.viewContainer);ln(t,x),window.addEventListener("touchmove",m,{passive:!0}),window.addEventListener("touchend",d,{passive:!0}),window.addEventListener("touchcancel",d,{passive:!0})},m=function(y){y.stopPropagation();const g=U(y),x=S(g,t.viewContainer);rn(t,x,a)},d=function(y){y.stopPropagation(),on(t),window.removeEventListener("touchmove",m),window.removeEventListener("touchend",d),window.removeEventListener("touchcancel",d)},q=t.fullState[w],v=q.handlers[n]||[];q.handlers[n]=v,v.push({ele:e,eventName:"mousedown",fn:r}),v.push({ele:e,eventName:"touchstart",fn:i}),e.addEventListener("mousedown",r),e.addEventListener("touchstart",i,{passive:!0})}function ha(e){const n=e.fullState[w],t=I(n.selectedIds,e.objectsMap);if(t.length!==1)throw new Error("resize push to stack expects 1 object selected");const a=t[0],r=j(a),l={objectId:a.id,toolId:w,toolType:"top-bar-tool",action:"resize",data:{bounds:{top:r.top,left:r.left,right:r.right,bottom:r.bottom}}};Y(l,e)}function Oa(e,n,t){const a=e.containerDiv,r=n[0]-t[0],l=n[1]-t[1],o=Math.atan2(l,r)*180/Math.PI+90;a.style.transform=`rotate(${Ce(o,5)}deg)`}function un(e,n){const t=e.fullState[w];if(!t.prevPoint)return;const r=I(t.selectedIds,e.objectsMap);if(r.length!==1){console.error("start rotating got incorrect number of objects to handle");return}const l=r[0],o=Te(j(l));Oa(l,n,o),t.prevPoint=n,Ee(l,e)}function mn(e,n){e.fullState[w].prevPoint=n,Ka(e)}function sn(e){const n=e.fullState[w];n.prevPoint=null}function za(e,n,t){const a=function(v){v.stopPropagation();const y=[v.clientX,v.clientY],g=S(y,t.viewContainer);mn(t,g),window.addEventListener("mousemove",r),window.addEventListener("mouseup",l)},r=function(v){v.stopPropagation();const y=[v.clientX,v.clientY],g=S(y,t.viewContainer);un(t,g)},l=function(v){v.stopPropagation(),sn(t),window.removeEventListener("mousemove",r),window.removeEventListener("mouseup",l)},o=function(v){v.stopPropagation();const y=U(v),g=S(y,t.viewContainer);mn(t,g),window.addEventListener("touchmove",i,{passive:!0}),window.addEventListener("touchend",m,{passive:!0}),window.addEventListener("touchcancel",m,{passive:!0})},i=function(v){v.stopPropagation();const y=U(v),g=S(y,t.viewContainer);un(t,g)},m=function(v){v.stopPropagation(),sn(t),window.removeEventListener("touchmove",i),window.removeEventListener("touchend",m),window.removeEventListener("touchcancel",m)},d=t.fullState[w],q=d.handlers[n]||[];d.handlers[n]=q,q.push({ele:e,eventName:"mousedown",fn:a}),q.push({ele:e,eventName:"touchstart",fn:o}),e.addEventListener("mousedown",a),e.addEventListener("touchstart",o,{passive:!0})}function Ka(e){const n=e.fullState[w],t=I(n.selectedIds,e.objectsMap),a={objectId:"",toolId:w,toolType:"top-bar-tool",action:"rotate",data:t.map(r=>({objectId:r.id,rotate:me(r.containerDiv)}))};Y(a,e)}function Ua(e,n){for(const t of e){const a=Yn(t);a&&(Fn(a,t.id,n),t.containerDiv.appendChild(a))}}function Yn(e){const n=e.containerDiv,t=e.id;if(Ba(n))return null;const a=document.createElement("div");return a.setAttribute("id",`${Ca}-${t}`),pe(a,Ga),a}function Ba(e){return e.querySelector('[id^="select-frame"')!==null}function _a(e){const n=[...e.fullState[w].selectedIds],{objectsMap:t,prevMousePosition:a}=e,r=I(n,t);if(Ie(r,e),r.length===1){const o=re(e.drawingTools,r[0].toolId);o&&e&&o.onUnSelect&&o.onUnSelect(r[0],e)}return a.current=null,{ids:n.splice(0,n.length),objects:r}}function Na(e,n,t){const a=re(e,n.toolId);!a||!t||!a.onSelect||a.onSelect(n,t)}function Ie(e,n){for(const t of e)qe(t,n)}function fe(e,n){const t=Yn(e);t&&(Fn(t,e.id,n),Wa(t,e,n),e.containerDiv.appendChild(t))}function Wa(e,n,t){const a=n.id,r=K(a,2,0,0,2);B(r,a,t,xa);const l=K(a,2,1);B(l,a,t,qa);const o=K(a,2,2);B(o,a,t,Pa);const i=K(a,0,2,1);B(i,a,t,Ha);const m=K(a,0,2,2);B(m,a,t,Sa);const d=K(a,0,1,2);B(d,a,t,Ea);const q=K(a,0,0,2,2);B(q,a,t,Ta);const v=K(a,0,0,1,2);B(v,a,t,Ma),e.appendChild(r),e.appendChild(l),e.appendChild(o),e.appendChild(i),e.appendChild(m),e.appendChild(d),e.appendChild(q),e.appendChild(v);const y=K(a);y.id=`${ja}-${a}`,pe(y,Va),za(y,a,t);const g=document.createElement("div");pe(g,La),g.id=`line-div-${a}`,y.appendChild(g),e.appendChild(y)}const ve=-12;function K(e,n=0,t=0,a=0,r=0){const l=document.createElement("button");pe(l,Ra);let o="";return n===2&&(l.style.top=`${ve}px`,o+="n"),a===2?(l.style.bottom=`${ve}px`,o+="s"):a===1&&(l.style.bottom=`calc(50% - ${$n/2}px)`),t===2?(l.style.right=`${ve}px`,o+="e"):t===1&&(l.style.right=`calc(50% - ${Xn/2}px)`),r===2&&(l.style.left=`${ve}px`,o+="w"),l.id=`${fa}-${o}-${e}`,l.style.cursor=`${o}-resize`,l}function Ve(e){const n=e.fullState[w];if(!n)throw new Error("no select state present");return[...n.selectedIds]}function dn(e,n){const t=e.data,a=[];for(const r of t){const l=f(n.objectsMap,r.objectId),o=l.containerDiv,i=j(l),{left:m,top:d}=r;a.push({objectId:r.objectId,top:i.top,left:i.left}),o.style.left=m+"px",o.style.top=d+"px",Ee(l,n)}return e.data=a,e}function cn(e,n){const t=e.data,a=[];for(const r of t){const l=f(n.objectsMap,r.objectId),o=l.containerDiv,i=me(o);a.push({objectId:r.objectId,rotate:i}),o.style.transform=`rotate(${r.rotate}deg)`,Ee(l,n)}return e.data=a,e}function vn(e,n){const t=f(n.objectsMap,e.objectId),a=e.data,r=j(t),l={...r};return Xa(t.containerDiv,a.bounds),re(n.drawingTools,t.toolId).onResize(t,{...n,previousPoint:[r.left,r.top],newPoint:[a.bounds.left,a.bounds.top],shouldPreserveAspectRatio:n.shouldCornerResizePreserveRatio}),e.data.bounds=l,e}function Xa(e,n){e.style.left=n.left+"px",e.style.top=n.top+"px",e.style.width=n.right-n.left+"px",e.style.height=n.bottom-n.top+"px"}const he=/^(#([0-9A-F]{3}){1,2}|transparent)$/i;function Jn(e,n,t,a){if(!a.match(he))return;const r=Me(e),l=e.style[n];return r.style[t]=a,e.style[n]=a,ae(e,n,l)}function $a(e,n){return Jn(e,"color","stroke",n)}function Br(e,n){return Jn(e,"background","fill",n)}function Fa(e,n){const{ele:t,action:a}=Zn(e,n,"background");return a&&(t.style.backgroundColor=n,a)}function Zn(e,n,t){const a=e.element;if(!a)throw new Error;if(!n.match(he))return{ele:a,action:void 0};const r=e.style[t];e.style[t]=n;const l=ae(e,t,r);return{ele:a,action:l}}function Ya(e,n){const{ele:t,action:a}=Zn(e,n,"color");return a&&(t.style.border=se(e.style),a)}function se(e){return`${e.lineWidth}px solid ${e.color}`}function _r(e,n){return Qn(e,"color","color",n)}function Nr(e,n){return Qn(e,"background","backgroundColor",n)}function Qn(e,n,t,a){if(!a.match(he))return;const r=e.style[n];return e.style[n]=a,e.containerDiv.style[t]=a,ae(e,n,r)}function et(e,n){if(!n.shouldKeepHistory)return;const t={toolId:e.toolId,toolType:"top-bar-tool",objectId:e.id,action:"create",data:null};Y(t,n)}function we(e,n){const t=f(n.objectsMap,e.objectId);return Re(e.objectId,n),e.data=t,e.action="delete",e}function be(e,n){const t=e.data;if(!t)throw new Error("redo delete but no data exists");return n.objectsMap.set(t.id,t),n.viewContainer.appendChild(t.containerDiv),e.data=null,e.action="create",e}function yn(e,n){const t=e.data;if(!t||typeof t!="object")throw new Error("malformed data");for(const[a,r]of t.entries())n.viewContainer.appendChild(r.containerDiv),n.objectsMap.set(a,r);return e.action="create",e.data=Array.from(t.keys()),e}function Ge(e,n){const t=e.data;if(!t||!Array.isArray(t))throw console.error(e),new Error("malformed data");e.data=new Map;for(const a of t)e.data.set(a,f(n.objectsMap,a)),Re(a,n);return e.action="delete",e}function De(e,n){const t=f(n.objectsMap,e.objectId),a=t.style.opacity,r=e.data,l=t.element;if(!r||!l)throw new Error;return t.style.opacity=r,l.style.opacity=t.style.opacity,e.data=a,e}function pn(e,n){const t=f(n.objectsMap,e.objectId),a=t.style.lineWidth,r=e.data,l=t.element;if(!r||!l)throw new Error;return t.style.lineWidth=r,l.style.border=se(t.style),e.data=a,e}function gn(e,n){const t=f(n.objectsMap,e.objectId),a=t.style.background,r=e.data,l=t.element;if(!r||!l)throw new Error;return t.style.background=r,l.style.backgroundColor=r,e.data=a,e}function wn(e,n){const t=f(n.objectsMap,e.objectId),a=t.style.color,r=e.data,l=t.element;if(!r||!l)throw new Error;return t.style.color=r,l.style.border=se(t.style),e.data=a,e}function bn(e,n){return nt(e,n,"color","stroke")}function Wr(e,n){return nt(e,n,"background","fill")}function nt(e,n,t,a){const r=f(n.objectsMap,e.objectId),l=r.style[t],o=e.data,i=r.element;if(!i)throw new Error;let m=i.querySelector("path");if(m||(m=i.querySelector("line")),!m)throw new Error;return r.style[t]=o,m.style[a]=o,e.data=l,e}function Dn(e,n){const t=f(n.objectsMap,e.objectId),a=t.style.lineWidth,r=e.data,l=Me(t);return t.style.lineWidth=r,l.style.strokeWidth=r+"px",e.data=a,e}function ee(e,n){const t=e.localState?.subs??[];Ve(n).length>0?t.forEach(r=>r("selected")):t.forEach(r=>r("none-selected"))}const L={tooltip:"Select tool",icon:u.createElement(aa,{style:{transform:"translate(-2px, -1px)"}}),id:w,onDrawStart:e=>{e.containerDiv.style.border=`1px solid ${H.primary.main}`,e.containerDiv.style.backgroundColor=H.primary.light+"4d"},onDrawing(e,n){_n(e),e.coords.splice(1),tr(e,n),ee(L,n)},onDrawEnd(e,n){const{objectsMap:t,viewContainer:a}=n;a.removeChild(e.containerDiv),t.delete(e.id),sa('[id^="react-draw-cursor"',n.viewContainer),Za(e,n),ee(L,n)},onResize:e=>{},onUnMount(e){for(const n of Object.values(e.objectsMap))qe(n,e);L.localState?.subs&&(L.localState.subs=[])},onUnPickTool(e){const n=e.fullState[w],t=n.selectedIds;if(t.length===0)return;const a=I(t,e.objectsMap);Ie(a,e),n.selectedIds=[],ee(L,e)},onKeyPress(e,n){e.key==="Delete"&&(Ja(n),ee(L,n))},undoHandlers:{delete:yn,create:Ge,drag:dn,rotate:cn,resize:vn},redoHandlers:{delete:yn,create:Ge,drag:dn,rotate:cn,resize:vn},subscribe(e){L.localState||(L.localState={}),L.localState?.subs||(L.localState.subs=[]),L.localState.subs.push(e)}};function Ja(e){const t=e.fullState[w].selectedIds;if(t.length<1)return;const a=va();a.toolId=w,a.data=[...t];const r=Ge(a,e);e.shouldKeepHistory&&Y(r,e),ee(L,e)}const Za=(e,n)=>{const t=n.lastEvent?.shiftKey??!1,a=e.coords[0],r=e.coords[e.coords.length-1];je(r,a)<Et&&Qa(n,a,r,t)};function Qa(e,n,t,a){const r=er(e.objectsMap,n,t);let{ids:l}=_a(e);return a||(l=[]),r!==null&&(l=l.concat([r.id])),tt(e,l),l}function er(e,n,t){let a=null;for(const[r,l]of e.entries()){const o=parseInt(l.style.zIndex),i=j(l),m=me(l.containerDiv);if(nr({bounds:i,rotation:m},n,t)){if(a===null){a=l;continue}o>parseInt(a.style.zIndex)&&(a=l)}}return a}function nr({bounds:e,rotation:n},...t){for(const a of t){const r=Te(e),[l,o]=ye(a,r),i=ge(l,o,-n);if(ea(e,i))return!0}return!1}function tt(e,n){e.fullState[w].selectedIds=n;const t=I(n,e.objectsMap);if(t.length===1)return Na(e.drawingTools,t[0],e),fe(t[0],e);if(t.length>1)return Ua(t,e)}function tr(e,n){const t=n.lastEvent?.shiftKey??!1,r=[...n.fullState[w].selectedIds];let l=ar(n.objectsMap,j(e),n);t&&(l=new Array(...new Set([...l,...r]))),tt(n,l)}function ar(e,n,t){const a=[];for(const[r,l]of e.entries())qe(l,t),Qt(n,j(l))&&a.push(r);return a}function kn(e,n,t){const a=e.filter(l=>t==="top"?!l.postition||l.postition.view===t:!!l.postition&&l.postition.view===t),r=n.filter(l=>t==="bottom"?!l.postition||l.postition.view===t:!!l.postition&&l.postition.view===t);return[...a].concat(r).sort((l,o)=>!l.postition?.order&&!o.postition?.order?0:l.postition?.order?o.postition?.order?l.postition.order-o.postition.order:-1:1)}function at({children:e,id:n="main",drawingTools:t,hideTopBar:a,actionTools:r=[],hideBottomBar:l,shouldKeepHistory:o=!0,shouldSelectAfterCreate:i=!0,isResponsive:m=!1,shouldCornerResizePreserveRatio:d=!1,styleComponents:q,menuComponents:v=[],onLoad:y,contextGetter:g}){const x=p.useRef(null),[D,le]=p.useState(t[0]),J=p.useRef(new Map),h=p.useRef(null),O=p.useRef(`drawing-area-container-${n}`),de=p.useRef(null),z=p.useRef(null),lt=p.useRef(rr(t)),ot=p.useRef([]),it=p.useRef([]),Se=p.useRef(null),ce=p.useRef(or()),[xe,ze]=p.useState(new Map),ut=p.useMemo(()=>kn(t,r,"top"),[t,r]),mt=p.useMemo(()=>kn(t,r,"bottom"),[t,r]),st=()=>{const s=new Map;return r.reduce((c,b)=>(c.set(b.id,b.getDisplayMode(P())),c),s)},F=()=>{const s=st();if(s.size!==xe.size)return ze(s);const c=s.keys();for(const b of c)if(s.get(b)!==xe.get(b))return ze(s)};p.useEffect(()=>{F(),y&&y(P())},[]),p.useEffect(()=>{if(D.id===w){const s=Se.current;if(s){const c=P();qn(c),c.fullState[w].selectedIds=[s.id],fe(s,c),Se.current=null}}F()},[D]);const dt=s=>{if(D.id!==w)return Se.current=s,le(Z(t,w));const c=P();qn(c),c.fullState[w].selectedIds=[s.id],fe(s,c),F(),ee(Z(t,w),c)},P=s=>{const c=s||ct(),b=lt.current;return{viewContainer:c,objectsMap:J.current,lastEvent:z.current,prevMousePosition:de,drawingTools:t,fullState:b,undoStack:ot.current,redoStack:it.current,shouldKeepHistory:o,shouldCornerResizePreserveRatio:d,selectDrawingTool:Pe,selectObject:dt,shouldSelectAfterCreate:i,globalStyles:ce.current}};function Ke(s){D.onKeyPress&&(D.onKeyPress(s,P()),F())}const ct=()=>{const s=x.current;if(!s)throw new Error("no view container while resizing");return s};function Ue(s){const c=P(),b={...ce.current},A=Ae(c)+1;b.zIndex=A.toString();const V=Bn(s,b,D.id);h.current=V,c.viewContainer.append(V.containerDiv),D.onDrawStart(V,c)}function Be(s){const c=h.current;if(!c)return;const b=P();c.coords.push(s),D.onDrawing(c,b)}function _e(s){const c=h.current;de.current=null,h.current=null,c&&(c.coords.push(s),J.current.set(c.id,c),D.onDrawEnd(c,P()),F())}p.useEffect(()=>{const s=x.current;if(!s)return;function c(k){z.current=k;const T=[k.clientX,k.clientY],M=S(T,s);Ue(M)}function b(k){z.current=k;const T=[k.clientX,k.clientY],M=S(T,s);Be(M)}function E(k){z.current=k;const T=[k.clientX,k.clientY],M=S(T,s);_e(M)}function A(k){z.current=k,k.preventDefault();const T=U(k),M=S(T,s);Ue(M)}function V(k){z.current=k,k.preventDefault();const T=U(k),M=S(T,s);Be(M)}function G(k){z.current=k,k.preventDefault();const T=U(k),M=S(T,s);_e(M)}return s.addEventListener("mousedown",c),s.addEventListener("mouseup",E),s.addEventListener("mousemove",b),s.addEventListener("touchstart",A,{passive:!1}),s.addEventListener("touchmove",V,{passive:!1}),s.addEventListener("touchcancel",G,{passive:!0}),s.addEventListener("touchend",G,{passive:!0}),s.addEventListener("mouseleave",E),window.addEventListener("keydown",Ke),()=>{s.removeEventListener("mousedown",c),s.removeEventListener("mouseup",E),s.removeEventListener("mousemove",b),s.removeEventListener("touchstart",A),s.removeEventListener("touchmove",V),s.removeEventListener("touchcancel",G),s.removeEventListener("touchend",G),s.removeEventListener("mouseleave",E),window.removeEventListener("keydown",Ke);const k=P(s);for(const T of t)T.onUnMount&&T.onUnMount(k)}},[D]);const oe=p.useRef({width:0,height:0});p.useEffect(()=>{function s(){const E=P(),{viewContainer:A}=E,V=A.offsetWidth,G=A.offsetHeight,k=G/oe.current.height,T=V/oe.current.width;E.objectsMap.forEach(M=>{M.containerDiv.style.height=M.containerDiv.offsetHeight*k+"px",M.containerDiv.style.width=M.containerDiv.offsetWidth*T+"px";const We=Q(M.containerDiv.style.left),Xe=Q(M.containerDiv.style.top),$e=We*T,Fe=Xe*k;M.containerDiv.style.left=$e+"px",M.containerDiv.style.top=Fe+"px",Z(E.drawingTools,M.toolId).onResize(M,{...E,shouldPreserveAspectRatio:d,previousPoint:[We,Xe],newPoint:[$e,Fe]})}),oe.current={width:V,height:G}}const{viewContainer:c}=P();if(!c)return;oe.current.width=c.offsetWidth,oe.current.height=c.offsetHeight;let b=null;return m&&(b=new ResizeObserver(s),b.observe(c)),()=>{b?.disconnect()}},[]);const Pe=s=>{const c=s.id;if(D.id!==c){const b=Z(t,c);if(b){const E=D,A=P();E.onUnPickTool&&E.onUnPickTool(A),b.onPickTool&&b.onPickTool(A),le(b),F()}}},Ne=s=>{const c=P();s(c),F()},vt=()=>{const s=P(),c=Ve(s);return c.length===0?ce.current:ir(c,s)},yt=(s,c)=>{const b=P(),E=Ve(b);if(E.length===0)return ce.current[s]=c,[];const V=E.map(G=>f(b.objectsMap,G)).map(G=>{const T=Z(b.drawingTools,G.toolId).styleHandlers;if(T&&T[s])return T[s](G,c,b)});return pt(V,b),V},pt=(s,c)=>{const b=s.filter(da);if(b.length===0)return;Y({data:b,objectId:"",toolId:"",toolType:"batch",action:"batch"},c)};return p.useEffect(()=>{g&&g(P)},[]),u.createElement(u.Fragment,null,!a&&u.createElement(Un,{tools:ut,onClickActionTool:Ne,onSelectDrawingTool:Pe,currentTool:D.id}),u.createElement("div",{id:O.current,style:{position:"relative",width:"100%",flex:1,overflow:"hidden",boxSizing:"border-box"},ref:x},u.createElement(hn,null),e),!l&&u.createElement(Wn,{displayMap:xe,tools:mt,onSelectDrawingTool:Pe,onClickActionTool:Ne,stylesMenu:{getEditProps:vt,styleComponents:q,onUpdateStyle:yt}},v.map((s,c)=>u.createElement(s,{key:c,getContext:P}))),u.createElement("style",null,`
		#${O.current} {
			cursor: ${D.cursor||"default"};
		}
	  `))}function Z(e,n){const t=e.find(a=>a.id===n);if(!t)throw new Error("could not find the used tool");return t}function rr(e){const n={[w]:{selectedIds:[],handlers:{},prevPoint:null},[Mt]:{deletedObjects:new Map}};return e.reduce((t,a)=>(t[a.id]===void 0&&(t[a.id]={}),a.setupCustomState&&(t[a.id]=Object.assign(t[a.id],a.setupCustomState(n))),t),n)}function qn(e){const n=e.fullState[w].selectedIds;if(n.length>0){const t=I(n,e.objectsMap);Ie(t,e)}}const lr={lineWidth:"4",zIndex:"1",color:"#000000",fontSize:"14",background:"transparent",opacity:"1"};function or(e){return{...lr}}function ir(e,n){const t={},a=e.map(l=>f(n.objectsMap,l)),r={};for(const l of a){const o=Z(n.drawingTools,l.toolId);if(o.styleHandlers){const i=Object.keys(o.styleHandlers);for(const m of i){const d=l.style[m];d?(t[m]=d,r[m]=(r[m]||0)+1):console.error("could not get style value for key:",m,"from object",l)}}}for(const l in r)r[l]!==a.length&&delete t[l];return t}at.__docgenInfo={description:"",methods:[],displayName:"ReactDraw",props:{children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | React.ReactElement | JSX.Element",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"ReactReactElement",raw:"React.ReactElement"},{name:"JSX.Element"}]},description:""},layout:{required:!1,tsType:{name:"union",raw:'"default" | LayoutAbsolute | "fit"',elements:[{name:"literal",value:'"default"'},{name:"signature",type:"object",raw:`{
  width: number | string;
  height: number | string;
}`,signature:{properties:[{key:"width",value:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}],required:!0}},{key:"height",value:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}],required:!0}}]}},{name:"literal",value:'"fit"'}]},description:""},drawingTools:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"DrawingTools"}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"DrawingTools"},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]"},description:""},hideTopBar:{required:!1,tsType:{name:"boolean"},description:""},actionTools:{required:!1,tsType:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  getDisplayMode: (ctx: ReactDrawContext) => DisplayMode;
  handleContext: (ctx: ReactDrawContext) => void;
  onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  getDisplayMode: (ctx: ReactDrawContext) => DisplayMode;
  handleContext: (ctx: ReactDrawContext) => void;
  onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
}`,signature:{properties:[{key:"getDisplayMode",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => DisplayMode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"union",raw:'"disabled" | "hide" | "show"',elements:[{name:"literal",value:'"disabled"'},{name:"literal",value:'"hide"'},{name:"literal",value:'"show"'}]}},required:!0}},{key:"handleContext",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onUndo",value:{name:"signature",type:"function",raw:"(action: ActionObject, ctx: ReactDrawContext) => ActionObject",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!1}},{key:"onRedo",value:{name:"signature",type:"function",raw:"(action: ActionObject, ctx: ReactDrawContext) => ActionObject",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"BaseTool"},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!1}}]}}]}],raw:"ActionTools[]"},description:"",defaultValue:{value:"[]",computed:!1}},hideBottomBar:{required:!1,tsType:{name:"boolean"},description:""},shouldKeepHistory:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},shouldSelectAfterCreate:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},id:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"main"',computed:!1}},styleComponents:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: {
    order: number;
    component: StyleComponent;
  };
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"object",raw:`{
  order: number;
  component: StyleComponent;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!0}},{key:"component",value:{name:"signature",type:"function",raw:"(props: StyleComponentProps) => JSX.Element",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  onUpdate: (key: keyof ToolPropertiesMap, value: string) => void;
  styleKey: string;
  styleValue: string;
}`,signature:{properties:[{key:"onUpdate",value:{name:"signature",type:"function",raw:"(key: keyof ToolPropertiesMap, value: string) => void",signature:{arguments:[{type:{name:"ToolPropertiesMap"},name:"key"},{type:{name:"string"},name:"value"}],return:{name:"void"}},required:!0}},{key:"styleKey",value:{name:"string",required:!0}},{key:"styleValue",value:{name:"string",required:!0}}]}},name:"props"}],return:{name:"JSX.Element"}},required:!0}}]},required:!0}}]}},description:""},menuComponents:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"function",raw:`(props: {
  getContext: () => ReactDrawContext;
}) => JSX.Element`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  getContext: () => ReactDrawContext;
}`,signature:{properties:[{key:"getContext",value:{name:"signature",type:"function",raw:"() => ReactDrawContext",signature:{arguments:[],return:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}}},required:!0}}]}},name:"props"}],return:{name:"JSX.Element"}}}],raw:"MenuComponent[]"},description:"",defaultValue:{value:"[]",computed:!1}},isResponsive:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},shouldCornerResizePreserveRatio:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onLoad:{required:!1,tsType:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}},name:"ctx"}],return:{name:"void"}}},description:""},contextGetter:{required:!1,tsType:{name:"signature",type:"function",raw:"(ctxGetter: () => ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => ReactDrawContext",signature:{arguments:[],return:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  objectsMap: DrawingDataMap;
  lastEvent: CapturedEvent;
  prevMousePosition: MutableRefObject<Point | null>;
  drawingTools: DrawingTools[];
  fullState: CustomState;
  undoStack: ActionObject[];
  redoStack: ActionObject[];
  shouldKeepHistory: boolean;
  shouldSelectAfterCreate: boolean;
  shouldCornerResizePreserveRatio: boolean;
  globalStyles: ToolPropertiesMap;
  selectDrawingTool: (tool: DrawingTools) => void;
  selectObject: (object: DrawingData) => void;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"objectsMap",value:{name:"Map",elements:[{name:"string"},{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}],raw:"Map<string, DrawingData>",required:!0}},{key:"lastEvent",value:{name:"union",raw:"MouseEvent | TouchEvent | null",elements:[{name:"MouseEvent"},{name:"TouchEvent"},{name:"null"}],required:!0}},{key:"prevMousePosition",value:{name:"MutableRefObject",elements:[{name:"union",raw:"Point | null",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0},{name:"null"}]}],raw:"MutableRefObject<Point | null>",required:!0}},{key:"drawingTools",value:{name:"Array",elements:[{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]}],raw:"DrawingTools[]",required:!0}},{key:"fullState",value:{name:"CustomState",required:!0}},{key:"undoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"redoStack",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}],raw:"ActionObject[]",required:!0}},{key:"shouldKeepHistory",value:{name:"boolean",required:!0}},{key:"shouldSelectAfterCreate",value:{name:"boolean",required:!0}},{key:"shouldCornerResizePreserveRatio",value:{name:"boolean",required:!0}},{key:"globalStyles",value:{name:"ToolPropertiesMap",required:!0}},{key:"selectDrawingTool",value:{name:"signature",type:"function",raw:"(tool: DrawingTools) => void",signature:{arguments:[{type:{name:"intersection",raw:`BaseTool & {
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,elements:[{name:"signature",type:"object",raw:`{
  id: string;
  tooltip?: string;
  icon?: JSX.Element;
  postition?: {
    order?: number;
    view: ViewPosition;
  };
  onPickTool?: (ctx: ReactDrawContext) => void;
  onUnPickTool?: (ctx: ReactDrawContext) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"tooltip",value:{name:"string",required:!1}},{key:"icon",value:{name:"JSX.Element",required:!1}},{key:"postition",value:{name:"signature",type:"object",raw:`{
  order?: number;
  view: ViewPosition;
}`,signature:{properties:[{key:"order",value:{name:"number",required:!1}},{key:"view",value:{name:"union",raw:'"top" | "bottom"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}],required:!0}}]},required:!1}},{key:"onPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnPickTool",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}}]}},{name:"signature",type:"object",raw:`{
  setupCustomState?: (state: CustomState) => any;
  onDrawStart: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawing: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDrawEnd: (data: DrawingData, ctx: ReactDrawContext) => void;
  doResize?: (data: DrawingData, ctx: OnResizeContext) => void;
  onResize: (data: DrawingData, ctx: OnResizeContext) => void;
  onSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onAfterUpdate?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onUnSelect?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onDeleteObject?: (data: DrawingData, ctx: ReactDrawContext) => void;
  onKeyPress?: (event: KeyboardEvent, ctx: ReactDrawContext) => void;
  onUnMount?: (ctx: ReactDrawContext) => void;
  //   onUndo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  //   onRedo?: (action: ActionObject, ctx: ReactDrawContext) => ActionObject;
  onDuplicate?: (newData: DrawingData, ctx: ReactDrawContext) => DrawingData;
  undoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  redoHandlers?: {
    [action: ActionKey]: UndoHandler;
  };
  styleHandlers?: {
    [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
  };
  cursor?: string;
  subscribe?: (callback: (event: string) => void) => void;
  localState?: { [key: string]: any };
}`,signature:{properties:[{key:"setupCustomState",value:{name:"signature",type:"function",raw:"(state: CustomState) => any",signature:{arguments:[{type:{name:"CustomState"},name:"state"}],return:{name:"any"}},required:!1}},{key:"onDrawStart",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawing",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onDrawEnd",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"doResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onResize",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: OnResizeContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"signature",type:"object",raw:`{
  viewContainer: HTMLDivElement;
  previousPoint: Point;
  newPoint: Point;
  shouldPreserveAspectRatio: boolean;
}`,signature:{properties:[{key:"viewContainer",value:{name:"HTMLDivElement",required:!0}},{key:"previousPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"newPoint",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"shouldPreserveAspectRatio",value:{name:"boolean",required:!0}}]}},name:"ctx"}],return:{name:"void"}},required:!0}},{key:"onSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onAfterUpdate",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnSelect",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDeleteObject",value:{name:"signature",type:"function",raw:"(data: DrawingData, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onKeyPress",value:{name:"signature",type:"function",raw:"(event: KeyboardEvent, ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"KeyboardEvent"},name:"event"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onUnMount",value:{name:"signature",type:"function",raw:"(ctx: ReactDrawContext) => void",signature:{arguments:[{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"void"}},required:!1}},{key:"onDuplicate",value:{name:"signature",type:"function",raw:"(newData: DrawingData, ctx: ReactDrawContext) => DrawingData",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"newData"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}}},required:!1}},{key:"undoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"redoHandlers",value:{name:"signature",type:"object",raw:`{
  [action: ActionKey]: UndoHandler;
}`,signature:{properties:[{key:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0},value:{name:"signature",type:"function",raw:`(
  action: ActionObject,
  ctx: ReactDrawContext,
) => ActionObject`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},name:"action"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}}},required:!0}}]},required:!1}},{key:"styleHandlers",value:{name:"signature",type:"object",raw:`{
  [key: keyof ToolPropertiesMap]: UpdateStyleHandler;
}`,signature:{properties:[{key:{name:"ToolPropertiesMap"},value:{name:"signature",type:"function",raw:`(
  data: DrawingData,
  value: string,
  ctx: ReactDrawContext,
) => ActionObject | undefined`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"data"},{type:{name:"string"},name:"value"},{type:{name:"ReactDrawContext"},name:"ctx"}],return:{name:"union",raw:"ActionObject | undefined",elements:[{name:"signature",type:"object",raw:`{
  toolType: ActionType;
  toolId: string;
  objectId: string;
  action: ActionKey;
  data: any;
}`,signature:{properties:[{key:"toolType",value:{name:"union",raw:`| "top-bar-tool"
| "bottom-bar-tool"
| "menu-tool"
| "batch"`,elements:[{name:"literal",value:'"top-bar-tool"'},{name:"literal",value:'"bottom-bar-tool"'},{name:"literal",value:'"menu-tool"'},{name:"literal",value:'"batch"'}],required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"objectId",value:{name:"string",required:!0}},{key:"action",value:{name:"union",raw:`| "color"
| "delete"
| "create"
| string
| "drag"
| "resize"
| "rotate"
| "input"`,elements:[{name:"literal",value:'"color"'},{name:"literal",value:'"delete"'},{name:"literal",value:'"create"'},{name:"string"},{name:"literal",value:'"drag"'},{name:"literal",value:'"resize"'},{name:"literal",value:'"rotate"'},{name:"literal",value:'"input"'}],required:!0}},{key:"data",value:{name:"any",required:!0}}]}},{name:"undefined"}]}},required:!0}}]},required:!1}},{key:"cursor",value:{name:"string",required:!1}},{key:"subscribe",value:{name:"signature",type:"function",raw:"(callback: (event: string) => void) => void",signature:{arguments:[{type:{name:"signature",type:"function",raw:"(event: string) => void",signature:{arguments:[{type:{name:"string"},name:"event"}],return:{name:"void"}}},name:"callback"}],return:{name:"void"}},required:!1}},{key:"localState",value:{name:"signature",type:"object",raw:"{ [key: string]: any }",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]},required:!1}}]}}]},name:"tool"}],return:{name:"void"}},required:!0}},{key:"selectObject",value:{name:"signature",type:"function",raw:"(object: DrawingData) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  containerDiv: HTMLDivElement;
  coords: Point[];
  element: HTMLElement | SVGSVGElement | null;
  style: ToolPropertiesMap;
  toolId: string;
  customData: Map<string, any>;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"containerDiv",value:{name:"HTMLDivElement",required:!0}},{key:"coords",value:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}],raw:"Point[]",required:!0}},{key:"element",value:{name:"union",raw:"HTMLElement | SVGSVGElement | null",elements:[{name:"HTMLElement"},{name:"SVGSVGElement"},{name:"null"}],required:!0}},{key:"style",value:{name:"ToolPropertiesMap",required:!0}},{key:"toolId",value:{name:"string",required:!0}},{key:"customData",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!0}}]}},name:"object"}],return:{name:"void"}},required:!0}}]}}}},name:"ctxGetter"}],return:{name:"void"}}},description:""}}};const Xr=p.forwardRef(function({children:n,styles:t,style:a,classNames:r,...l},o){const{layout:i}=ur(n,l.layout);return u.createElement(In,{styles:t,classNames:r},u.createElement(Sn,null,u.createElement(kt,{layout:i,ref:o,style:a},u.createElement(at,{...l},n))))});function ur(e,n){const t=p.Children.count(e);if(t>1)throw new Error("ReactDraw expects either 0 or 1 children, detected more.");return n===void 0&&(n="default"),{numChildren:t,layout:n}}function mr(e){const n=document.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("fill","transparent"),n.setAttribute("stroke",e.color),n.style.strokeWidth=`${e.lineWidth}px`,n.setAttribute("stroke-linejoin","round"),n.setAttribute("stroke-linecap","round"),n}function $r(e){const n=document.createElementNS("http://www.w3.org/2000/svg","line");return n.setAttribute("fill","transparent"),n.setAttribute("stroke",e.color),n.style.strokeWidth=`${e.lineWidth}px`,n.setAttribute("stroke-linejoin","round"),n.setAttribute("stroke-linecap","round"),n}function Mn(e,n,t){if(!Le())throw new Error("createSVG called on server");const a=document.createElementNS("http://www.w3.org/2000/svg","svg");return a.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:xlink","http://www.w3.org/1999/xlink"),a.setAttribute("viewbox",`0 0 ${e} ${n}`),a.style.overflow="visible",a.style.position="absolute",a.style.top="0",a.style.left="0",a.style.opacity=t,a.style.width="100%",a.style.height="100%",a}function sr(e,n){if(!Le())throw new Error("createPath called on server");const t=document.createElementNS("http://www.w3.org/2000/svg","circle");return t.setAttribute("fill","black"),t.setAttribute("cx",`${Math.ceil(e/2)}`),t.setAttribute("cy",`${Math.ceil(e/2)}`),t.setAttribute("r",`${e}`),t}const dr=/^[0-9]+$/g;function cr(e,n){const t=e.element;if(!t)throw new Error;if(!n.match(dr))return;const a=e.style.lineWidth;return e.style.lineWidth=n,t.style.border=se(e.style),ae(e,"lineWidth",a)}function vr(e,n){const t=n.includes("px")?n:n+"px",a=Me(e),r="lineWidth",l=e.style[r];return a.style.strokeWidth=t,e.style[r]=n,ae(e,r,l)}const yr=/^(0(\.\d+)?|1(\.0+)?)$/;function rt(e,n){if(!n.match(yr))return;const t=e.element;if(!t)throw new Error;const a=e.style.opacity;return e.style.opacity=n,t.style.opacity=n,ae(e,"opacity",a)}const pr="PHN2ZyB3aWR0aD0iMTQiIGhlaWdodD0iMTQiIHZpZXdCb3g9IjAgMCAxNCAxNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KPHBhdGggZD0iTTEwLjU4NTggMC41ODU3ODZDMTEuMzY2OCAtMC4xOTUyNjIgMTIuNjMzMiAtMC4xOTUyNjIgMTMuNDE0MiAwLjU4NTc4NkMxNC4xOTUzIDEuMzY2ODMgMTQuMTk1MyAyLjYzMzE2IDEzLjQxNDIgMy40MTQyMUwxMi42MjEzIDQuMjA3MTFMOS43OTI4OSAxLjM3ODY4TDEwLjU4NTggMC41ODU3ODZaIiBmaWxsPSIjMTExODI3Ii8+CjxwYXRoIGQ9Ik04LjM3ODY4IDIuNzkyODlMMCAxMS4xNzE2VjE0SDIuODI4NDJMMTEuMjA3MSA1LjYyMTMyTDguMzc4NjggMi43OTI4OVoiIGZpbGw9IiMxMTE4MjciLz4KPC9zdmc+",Fr={id:"free-draw-tool",tooltip:"Free draw tool",icon:u.createElement(ta,null),onDrawStart:e=>{const n=parseInt(e.style.lineWidth),t=Mn(n,n,e.style.opacity);t.style.overflow="visible";const a=sr(n/2,e.style.color);t.appendChild(a),e.containerDiv.appendChild(t),e.element=t},onDrawing:(e,n)=>{Dr(e.coords),Zt(e);const t=j(e),a=Mn(t.width,t.height,e.style.opacity);a.style.overflow="visible";const r=gr(e,n.viewContainer);a.appendChild(r),e.containerDiv.innerHTML="",e.containerDiv.appendChild(a),e.element=a},onDrawEnd:(e,n)=>{et(e,n),qr(e),n.shouldSelectAfterCreate&&n.selectObject(e)},onResize:(e,n)=>{e.element&&Ft(e.element,j(e))},undoHandlers:{create:we,delete:be,color:bn,lineWidth:Dn,opacity:De},redoHandlers:{create:we,delete:be,color:bn,lineWidth:Dn,opacity:De},styleHandlers:{color:(e,n,t)=>$a(e,n),lineWidth:(e,n,t)=>vr(e,n),opacity:(e,n,t)=>rt(e,n)},cursor:`url(data:image/svg+xml;base64,${pr}) 0 16, pointer`};function gr(e,n){const t=mr(e.style);return t.setAttribute("d",wr(e,n)),t}function wr(e,n){let t="";for(let a=0;a<e.coords.length;a++){const r=e.coords[a],l=Jt(r,e.containerDiv,n);t+=br(l,a),a!==e.coords.length-1&&(t+=" ")}return t}function br(e,n){return n===0?`M ${e[0]} ${e[1]}`:`L ${e[0]} ${e[1]}`}function Dr(e){const n=e.length;if(n<3)return;const t=e[n-3],a=e[n-1];je(t,a)<10&&e.splice(n-2,1),je(t,a)<20&&(e[n-2]=kr(t,a))}function kr(e,n){const[t,a]=e,[r,l]=n;return[Math.min(t,r)+Math.abs(t-r)/2,Math.min(a,l)+Math.abs(a-l)/2]}function qr(e){e.customData.set(Tt,j(e))}const Yr={id:qt,tooltip:"Circle tool",icon:u.createElement(ra,null),onDrawStart:e=>{const n=Mr(e.style);e.containerDiv.appendChild(n),e.element=n},onDrawing:e=>{_n(e),e.coords.splice(1)},onDrawEnd(e,n){et(e,n),n.shouldSelectAfterCreate&&n.selectObject(e)},onResize(e,n){},undoHandlers:{create:we,delete:be,color:wn,background:gn,lineWidth:pn,opacity:De},redoHandlers:{delete:be,create:we,color:wn,background:gn,lineWidth:pn,opacity:De},styleHandlers:{color:(e,n,t)=>Ya(e,n),background:(e,n,t)=>Fa(e,n),lineWidth:(e,n,t)=>cr(e,n),opacity:(e,n,t)=>rt(e,n)}};function Mr(e){const n=document.createElement("div");return n.style.width="100%",n.style.height="100%",n.style.border=se(e),n.style.backgroundColor=e.background,n.style.borderRadius="50%",n.style.boxSizing="border-box",n.style.opacity=e.opacity,n}function Oe({onUpdate:e,styleKey:n,label:t,styleValue:a}){const r=p.useRef(ne(5)),l=o=>{const i=o.target.value,m=i==="transparent"?i:"#"+i;e(n,m)};return u.createElement("div",null,u.createElement("div",{style:{textAlign:"left",marginBottom:5}},u.createElement("label",{style:{fontWeight:"bold"},htmlFor:r.current},t)),u.createElement("div",{style:{display:"flex"}},u.createElement("span",{style:{display:"inline-block",borderRadius:5,width:30,height:30,backgroundColor:a}}),u.createElement("div",{style:{marginLeft:10,display:"flex"}},u.createElement("span",{style:{borderRadius:"5px 0px 0px 5px",width:30,padding:5,fontWeight:"bold",fontSize:18,textAlign:"center",color:"grey",backgroundColor:"lightgray"}},"#"),u.createElement("input",{id:r.current,value:a.replace("#",""),onChange:l,style:{width:80,borderRadius:"0px 5px 5px 0px"}}))))}Oe.__docgenInfo={description:"",methods:[],displayName:"ColorPicker",props:{onUpdate:{required:!0,tsType:{name:"signature",type:"function",raw:"(key: keyof ToolPropertiesMap, value: string) => void",signature:{arguments:[{type:{name:"ToolPropertiesMap"},name:"key"},{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},styleKey:{required:!0,tsType:{name:"string"},description:""},styleValue:{required:!0,tsType:{name:"string"},description:""},label:{required:!0,tsType:{name:"string"},description:""}}};const Tr=e=>u.createElement(Oe,{...e,label:"color"});Tr.__docgenInfo={description:"",methods:[],displayName:"ColorStyle"};const Er=e=>u.createElement(Oe,{...e,label:"background"});Er.__docgenInfo={description:"",methods:[],displayName:"BackgroundStyle"};function Sr({onUpdate:e,styleKey:n,styleValue:t}){const a=p.useRef(ne(5)),r=l=>{const o=l.target.value;e(n,o)};return u.createElement("div",null,u.createElement("div",{style:{textAlign:"left",marginBottom:5}},u.createElement("label",{style:{fontWeight:"bold"},htmlFor:a.current},"line width")),u.createElement("div",{style:{width:"100%"}},u.createElement("input",{id:a.current,value:t,onChange:r,type:"number",style:{boxSizing:"border-box",width:168,height:30,borderRadius:5,paddingLeft:10,fontSize:19,lineHeight:"1.6"},min:"0",step:"1"})))}Sr.__docgenInfo={description:"",methods:[],displayName:"LineWidthPicker",props:{onUpdate:{required:!0,tsType:{name:"signature",type:"function",raw:"(key: keyof ToolPropertiesMap, value: string) => void",signature:{arguments:[{type:{name:"ToolPropertiesMap"},name:"key"},{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},styleKey:{required:!0,tsType:{name:"string"},description:""},styleValue:{required:!0,tsType:{name:"string"},description:""}}};function xr({onUpdate:e,styleKey:n,styleValue:t}){const a=p.useRef(ne(5)),r=l=>{const o=l.target.value;e(n,o)};return u.createElement("div",null,u.createElement("div",{style:{textAlign:"left",marginBottom:5}},u.createElement("label",{style:{fontWeight:"bold"},htmlFor:a.current},"opacity (",t,")")),u.createElement("div",{style:{width:"100%"}},u.createElement("input",{id:a.current,value:t,onChange:r,type:"range",style:{boxSizing:"border-box",width:168,height:30,borderRadius:5,paddingLeft:10,fontSize:19,lineHeight:"1.6"},min:"0",max:"1",step:"0.1"})))}xr.__docgenInfo={description:"",methods:[],displayName:"LineWidthPicker",props:{onUpdate:{required:!0,tsType:{name:"signature",type:"function",raw:"(key: keyof ToolPropertiesMap, value: string) => void",signature:{arguments:[{type:{name:"ToolPropertiesMap"},name:"key"},{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},styleKey:{required:!0,tsType:{name:"string"},description:""},styleValue:{required:!0,tsType:{name:"string"},description:""}}};function Pr({onUpdate:e,styleKey:n,styleValue:t}){const a=p.useRef(ne(5)),r=l=>{const o=l.target.value;e(n,o)};return u.createElement("div",null,u.createElement("div",{style:{textAlign:"left",marginBottom:5}},u.createElement("label",{style:{fontWeight:"bold"},htmlFor:a.current},"font size")),u.createElement("div",{style:{width:"100%"}},u.createElement("input",{id:a.current,value:t,onChange:r,type:"number",style:{boxSizing:"border-box",width:168,height:30,borderRadius:5,paddingLeft:10,fontSize:19,lineHeight:"1.6"},min:"0",step:"1"})))}Pr.__docgenInfo={description:"",methods:[],displayName:"LineWidthPicker",props:{onUpdate:{required:!0,tsType:{name:"signature",type:"function",raw:"(key: keyof ToolPropertiesMap, value: string) => void",signature:{arguments:[{type:{name:"ToolPropertiesMap"},name:"key"},{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},styleKey:{required:!0,tsType:{name:"string"},description:""},styleValue:{required:!0,tsType:{name:"string"},description:""}}};const Hr=({getContext:e})=>{const n=_(jn),t=u.useRef(ne(6)),a=()=>{const r=e();if(r.objectsMap.size===0)return;const l=r.objectsMap.keys();ca(Array.from(l),r)};return u.createElement("button",{className:n,id:t.current,onClick:a},u.createElement("div",{style:{padding:"0px 5px",height:20}},u.createElement(oa,{width:15,height:20})),u.createElement("label",{htmlFor:t.current,style:{padding:"0px 10px",pointerEvents:"none"}},"Clear All"))};Hr.__docgenInfo={description:"",methods:[],displayName:"ClearAllButton"};export{$r as $,Ur as A,te as B,ke as C,cr as D,Fa as E,Ya as F,pn as G,gn as H,wn as I,fr as J,vr as K,Br as L,$a as M,Dn as N,Wr as O,bn as P,Vr as Q,Xr as R,w as S,Rr as T,Ft as U,Tt as V,Mn as W,mr as X,Gr as Y,Ar as Z,sr as _,Nr as a,Lr as a0,Ge as a1,yn as a2,Mt as a3,sa as a4,Zt as a5,Ir as a6,Qt as a7,Re as a8,Jt as a9,ca as aa,Ae as ab,ne as ac,Or as ad,me as ae,Xa as af,gr as ag,$t as ah,Hr as ai,Pr as aj,xr as ak,Sr as al,Er as am,Tr as an,H as ao,_ as ap,Ja as aq,_r as b,Yr as c,De as d,we as e,Fr as f,zr as g,j as h,et as i,ae as j,f as k,hr as l,Ve as m,I as n,Ie as o,Y as p,Na as q,be as r,L as s,fe as t,rt as u,Ua as v,re as w,Kr as x,Mr as y,_n as z};
